import {
  createBrowserRouter,
  RouterProvider,
  Route,
  Outlet,
  Navigate,
} from "react-router-dom";
import Navbar from "./components/navbar/Navbar";
import LeftBar from "./components/leftBar/LeftBar";
import RightBar from "./components/rightBar/RightBar";
import UserProfile from "./pages/userProfile/UserProfile";
import ChatPage from "./pages/chat/ChatPage"; // Import the new ChatPage component
import CreateForum from "./pages/createForum/CreateForum";
import Login from "./pages/login/Login";
import Register from "./pages/register/Register";
import Friends from "./pages/friendsList/FriendsPage";
import "./style.css";
import { useContext } from "react";
import { DarkModeContext } from "./context/darkModeContext";
import { AuthContext } from "./context/authContext";
import TableDataComponent from './components/TableDataComponent';  // Import the table data component

function App() {
  const {currentUser} = useContext(AuthContext);

  const { darkMode } = useContext(DarkModeContext);

  const apiBaseUrl = process.env.REACT_APP_API_BASE_URL || 'http://3.140.132.61';
  
  const Layout = () => {
    return (
      <div className={`theme-${darkMode ? "dark" : "light"}`}>
        <Navbar />
        <div style={{ display: "flex" }}>
          <LeftBar />
          <div style={{ flex: 6 }}>
            <Outlet />
          </div>
          <RightBar />
        </div>
      </div>
    );
  };

  const ProtectedRoute = ({ children }) => {
    if (!currentUser) {
      return <Navigate to="/login" />;
    }

    return children;
  };

  const router = createBrowserRouter([
  {
    path: "/",
    element: <Layout />,
    children: [
      {
        path: "/",
        element: (
          <div>
            <h2>Table Data</h2>
            <TableDataComponent />
          </div>
        ),
      },
      // Add a dynamic route for user profiles
      {
        path: "/profile/:username",
        element: <UserProfile />,
      },
    ],
  },
  {
    path: "/login",
    element: <Login />,
  },
  {
    path: "/register",
    element: <Register />,
  },
  {
    path: "/create-forum",
    element: <CreateForum />,
  },
  {
    path: "/chat",
    element: (
      <ProtectedRoute>
        <ChatPage />
      </ProtectedRoute>
    ),
  },
  {
    path: "/friends",
    element: <Friends />,
  },
  
]);


  return (
    <div>
      <RouterProvider router={router} />
    </div>
  );
}

export default App;
